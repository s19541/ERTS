// <auto-generated />
using System;
using ErtsModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ErtsModel.Migrations
{
    [DbContext(typeof(ErtsContext))]
    partial class ErtsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ErtsModel.Entities.Lol.LolGameStats", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasComment("Id");

                    b.Property<long?>("BlueTeamId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("End time");

                    b.Property<long?>("RedTeamId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("Start time");

                    b.HasKey("Id");

                    b.HasIndex("BlueTeamId");

                    b.HasIndex("RedTeamId");

                    b.ToTable("LolGamesStats");

                    b
                        .HasComment("Lol game stats");
                });

            modelBuilder.Entity("ErtsModel.Entities.Player", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasComment("Id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasComment("Name");

                    b.Property<string>("Nick")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Nickname");

                    b.Property<string>("Surname")
                        .HasColumnType("text")
                        .HasComment("Surname");

                    b.Property<long>("TeamId")
                        .HasColumnType("bigint")
                        .HasComment("Team ID");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b
                        .HasComment("Players");
                });

            modelBuilder.Entity("ErtsModel.Entities.Team", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasComment("Id");

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Game type");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Name");

                    b.HasKey("Id");

                    b.ToTable("LolTeams");

                    b
                        .HasComment("Team");
                });

            modelBuilder.Entity("ErtsModel.Entities.Lol.LolGameStats", b =>
                {
                    b.HasOne("ErtsModel.Entities.Team", "BlueTeam")
                        .WithMany()
                        .HasForeignKey("BlueTeamId");

                    b.HasOne("ErtsModel.Entities.Team", "RedTeam")
                        .WithMany()
                        .HasForeignKey("RedTeamId");

                    b.Navigation("BlueTeam");

                    b.Navigation("RedTeam");
                });

            modelBuilder.Entity("ErtsModel.Entities.Player", b =>
                {
                    b.HasOne("ErtsModel.Entities.Team", null)
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ErtsModel.Entities.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
